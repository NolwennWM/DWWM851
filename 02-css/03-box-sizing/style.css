*, ::before, ::after
{
    /* 
        Plusieurs balises HTML ont par défaut, une marge ou un padding.
        Certains développeurs préfèrent travailler à partir de 0, sans valeur par défaut.
        On trouvera donc souvent un "reset" en début de CSS.
    */
    margin: 0;
    padding: 0;
    /* 
        Par défaut, la largeur et la hauteur d'un élément ne prend en compte que sa "boîte de contenu",
        Ce qui peut entrainer des dépassements en cas d'ajout de bordure.
        Cette propriété ci-dessous, indique que la largeur et la hauteur prennent en compte la bordure.
    */
    box-sizing: border-box;
}
header
{
    background-color: aqua;
    /* Utiliser une image en fond */
    background-image: url("../../ressources/images/paysage/ville.jpg");
    /* arrêter la répétition de l'image */
    background-repeat: no-repeat;
    /* Indique la taille de l'image */
    background-size: cover;
    /* Indique la position visible de l'image. */
    background-position: bottom;
}
main
{
    /* background est une propriété qui peut accueillir toute les propriétés de background. */
    background: rgb(167, 145, 187);
    /* background: rgb(167, 145, 187) center/cover url("../../ressources/images/paysage/phare.jpg") no-repeat ; */
}
article
{
    /* Largeur d'un élément */
    width: 49%;
    /* modifier le type d'un élément, inline, block, inline-block... et d'autres qu'on verra plus tard */
    display: inline-block;

    /* border-color: black;
    border-style: solid;
    border-width: 5px; */
    border: 5px solid black;

    /* padding-top: 5px;
    padding-left: 10px;
    padding-bottom: 5px;
    padding-right: 10px; */
    /* padding: 5px 10px 5px 10px; */
    padding: 5px 10px;

    margin: 20px auto 20px 5px;
}
h1
{
    font-size: 42px;
    /* Gère l'alignement des éléments inline */
    text-align: center;
    /* en css le 0 peut être omis dans le cas d'un chiffre à virgule : 0.8em = .8em */
    padding: .8em .1em;
    color: antiquewhite;
}
p
{
    font-size: 20px;
}
p::first-letter
{
    font-size: 2em;
}
footer
{
    background: chartreuse;
    min-height: 120px;
    /* 
        width et height gère la largeur et la hauteur d'un élément.
        On peut au besoin utiliser aussi : 
        min-width et min-height qui donne une valeur minimum mais qui peut être dépassé.
        max-width et max-height qui donne une valeur maximum mais qui peut être plus petit.
    */
}
li
{
    display: inline-block;
    background: aqua;
    /* Permet de définir automatiquement la seconde taille d'un élément après avoir défini la première, cela via un ratio.
    1/1 signifie que la hauteur et la largeur doivent être les même.
    16/9 que pour 16px de large, la hauteur en fera 9. */
    aspect-ratio: 1/1;
    /* gère l'arrondi des angles, à 50% on obtient un cercle. */
    border-radius: 50%;
    padding: 1.2rem 5px;
    margin-left: 15%;
}

div
{
    width: 40vw;
    max-height: 90vh;
    /* Avec une largeur définie, mettre un margin auto à gauche et à droite va centrer l'élément. */
    margin: 5px auto;
}
img
{
    width: 100%;
    height: 20vh;
    /* object-fit et object-position fonctionnent comme background-size et background-position mais adapté à une balise "img" */
    object-fit: cover;
    object-position: center;
    /* Par défaut les éléments inline, laissent un espace entre l'élément suivant et lui-même en dessous. */
    display: block;
}

div, article
{
    /* 
        box-shadow et text-shadow permettent d'ajouter une ombre à un élément ou du texte.
        Ils prendront au moins 3 valeurs, 
            Le décalage vers la droite.
            Le décalage vers le bas.
            la couleur.
        On pourra y ajouter optionnellement,
            Le flou de l'ombre.
            l'étalage de l'ombre.
        On peut ajouter plusieurs ombres à un même élément en les séparants par des virgules
    */
    /* box-shadow: 5px 5px rgba(0, 0, 0, 0.315); */
    /* box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.315); */
    /* box-shadow: 2px 2px 1px 10px rgba(0, 0, 0, 0.315); */
    /* box-shadow:  5px 5px  3px rgba(0, 0, 0, 0.315) inset; */
    box-shadow: 
        5px 5px rgba(0, 0, 0, 0.315), 
        inset 5px 5px rgba(0, 0, 0, 0.527), 
        -5px -5px yellow; 
}